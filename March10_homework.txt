How is your chosen framework similar to Angular?
Out of the dozen or so Javascript frameworks out in the wild, one of the more
popular showdowns is between Ember and Angular. Their fight is so relentless
because they are similar in two major ways:
1) both are MVC (model-view- controller) frameworks that support routing,
bindings, partial views, filters, and observable changes;
2) both are opinionated, though Ember more so than Angular as it has stronger
conventions.

How is it different? (What kind of templates does it use?)

While Ember can do almost all that Angular can do, it does come with more built-
in support for standard coding, meaning it is capable of more "magic" (much like
"Rails magic") but has more dependencies. In contrast, Angular is much more
lightweight and does not require extra libraries. Although the size of Ember
with its dependencies is not optimal when doing mobile development, some
developers still prefer having the extra features when building more intricate
websites. The Handlebars template library, for instance, is one of Ember's
selling points since it allows the users to draw on their prior knowledge of
Handlebars and/or even Moustache. Although Angular plays well with templates, it
does rely heavily on "directives" to extend the HTML vocabulary in rendering
views. Another built- in feature is Ember Data, a library that maps client-side
models as data on the server-side, loading and saving records through RESTful
JSON API. In addition, one of the major differences between the two frameworks
is that Ember subscribes to Uniform access principle and Angular doesn't. This
principle, which states that the syntax should be the same when working with
either assigned attributes, methods, or precomputed primitives, means that, for
example, it's easier to change your mind and replace a primitive with a method
in Ember.* There are plenty more reasons as to why some developers choose Ember
over Angular (i.e. Ember deviates less from classic Javascript syntaxes and
patterns**, Ember is more compatible with jQuery, it's more difficult to reuse
object instances in Angular*, etc.), but in the end, the choice is dependent on
what the current project entails as well as the preferences of the development
team.

Are there any options to easily integrate it with Rails?
Ember can be easily integrated with Rails with the ember-rails gem
(https://github.com/emberjs /ember-rails).

Are there any notable apps built with it?
While Ember is relatively new and perhaps require a little more maturing,
several websites have already embraced it to develop their mobile apps:
1) Discourse (http://www.discourse.org)
2) LivingSocial
3) Groupon
4) Zendesk (http://www.zendesk.com/apps)

Sources:
http://readwrite.com/2014/02/06/angular-backbone-ember-best-javascript-
framework-for-you#awesm=~oyaemhW6aBfXDO
http://sporto.github.io/blog/2013/04/12/comparison-angular-backbone-can-ember/
http://ryantablada.com/post/why-i-chose-ember-js http://blog.nebithi.com
/angularjs-vs-emberjs/
http://www.devmynd.com/blog/2013-3-rails-ember-js
http://dybskiy.com/js-mvc-angular-vs-ember/
** http://www.100percentjs.com/backbone-or-angular-or-ember-here-is-my-choice-and-
why/
* http://eviltrout.com/2013/06/15/ember-vs-angular.html
http://en.wikipedia.org/wiki/Uniform_access_principle
